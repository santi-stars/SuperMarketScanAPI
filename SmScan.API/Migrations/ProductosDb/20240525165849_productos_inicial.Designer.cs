// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmScan.API.AppDbContext.Productos;

#nullable disable

namespace SmScan.API.Migrations.ProductosDb
{
    [DbContext(typeof(ProductosDbContext))]
    [Migration("20240525165849_productos_inicial")]
    partial class productos_inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmScan.API.Domains.Categorias.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__A3C02A10A98E5AAF");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SmScan.API.Domains.IngestaReferencia.IngestaReferencia", b =>
                {
                    b.Property<int>("IdIngestaRef")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngestaRef"));

                    b.Property<decimal>("FibraRef")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("GrasasRef")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("HidratosDeCarbonoRef")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("ProteinasRef")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SalRef")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("ValorEnergeticoRef")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdIngestaRef")
                        .HasName("PK__IngestaR__8A694C36C7CADB33");

                    b.ToTable("IngestaReferencia", t =>
                        {
                            t.HasTrigger("trg_onlyOneRow");
                        });
                });

            modelBuilder.Entity("SmScan.API.Domains.PaisesOrigen.PaisOrigen", b =>
                {
                    b.Property<int>("IdPaisOrigen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaisOrigen"));

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPaisOrigen")
                        .HasName("PK__PaisOrig__3712CD21B8989244");

                    b.ToTable("PaisOrigen", (string)null);
                });

            modelBuilder.Entity("SmScan.API.Domains.Productos.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Fibra")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Grasas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("HidratosDeCarbono")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPaisOrigen")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Proteinas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Sal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("ValorEnergetico")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__09889210927295B0");

                    b.HasIndex("CodigoBarras")
                        .IsUnique()
                        .HasFilter("[CodigoBarras] IS NOT NULL");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPaisOrigen");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("SmScan.API.Domains.Productos.Vistas.ProductosVistaBase", b =>
                {
                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(271)
                        .HasColumnType("nvarchar(271)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PrecioPorKg")
                        .HasColumnType("decimal(10, 2)");

                    b.ToTable((string)null);

                    b.ToView("ProductosVistaBase", (string)null);
                });

            modelBuilder.Entity("SmScan.API.Domains.Productos.Vistas.ProductosVistaDetalle", b =>
                {
                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(271)
                        .HasColumnType("nvarchar(271)");

                    b.Property<decimal?>("Fibra")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Grasas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("HidratosDeCarbono")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PrecioPorKg")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Proteinas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Sal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("ValorEnergetico")
                        .HasColumnType("decimal(10, 2)");

                    b.ToTable((string)null);

                    b.ToView("ProductosVistaDetalle", (string)null);
                });

            modelBuilder.Entity("SmScan.API.Domains.Productos.Vistas.ProductosVistaNutricional", b =>
                {
                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Fibra")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Grasas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("HidratosDeCarbono")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PorcentajeFibra")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("PorcentajeGrasas")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("PorcentajeHidratosDeCarbono")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("PorcentajeProteinas")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("PorcentajeSal")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("PorcentajeValorEnergetico")
                        .HasColumnType("decimal(10, 1)");

                    b.Property<decimal?>("Proteinas")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Sal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("ValorEnergetico")
                        .HasColumnType("decimal(10, 2)");

                    b.ToTable((string)null);

                    b.ToView("ProductosVistaNutricional", (string)null);
                });

            modelBuilder.Entity("SmScan.API.Domains.Productos.Producto", b =>
                {
                    b.HasOne("SmScan.API.Domains.Categorias.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Productos__IdCat__44FF419A");

                    b.HasOne("SmScan.API.Domains.PaisesOrigen.PaisOrigen", "PaisOrigen")
                        .WithMany("Productos")
                        .HasForeignKey("IdPaisOrigen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Productos__IdPai__440B1D61");

                    b.Navigation("Categoria");

                    b.Navigation("PaisOrigen");
                });

            modelBuilder.Entity("SmScan.API.Domains.Categorias.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SmScan.API.Domains.PaisesOrigen.PaisOrigen", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
